#!/bin/bash +xe

ON_BUILD_CONFIG_DIR=$(cd "$(dirname "$0")"; pwd)

if [ "$#" -ne "1" ];
then
    echo "usage: $0 <target_directory_of_rackhd_repo_code>"
    exit 2
fi  
REPO_DIR=$1

if [ ! -d "$REPO_DIR" ];
then 
    echo "Error:  argument [$REPO_DIR] is not a directory"
    exit 1
fi

REPO_NAME=`pushd ${REPO_DIR} >/dev/null && git remote show origin -n | grep "Fetch URL:" | sed "s#^.*/\(.*\).git#\1#" && popd > /dev/null`
TEMPLATE_DIR=${ON_BUILD_CONFIG_DIR}/${REPO_NAME}

FILE_LIST=( sonar.properties   pre-deploy.sh  post-deploy.sh post-result.py    test.sh  unit-test.sh  .nvmrc  )

for FILE in ${FILE_LIST[*]}
do
    echo "Generating ${FILE} file from template"
    # dump ENV into a file, will replace template(.in files) with ENV placeholders
    env REPO_NAME=${REPO_NAME} | sed 's/[\%]/\\&/g;s/\([^=]*\)=\(.*\)/s%${\1}%\2%/' > sed.script

    # use .in file in TEMPLATE_DIR first
    if [ -e "${TEMPLATE_DIR}/${FILE}.in" ]; then
          cat ${TEMPLATE_DIR}/${FILE}.in | sed -f sed.script > ${REPO_DIR}/${FILE}
    else
          # else , use common .in file
          cat ${ON_BUILD_CONFIG_DIR}/${FILE}.in | sed -f sed.script > ${REPO_DIR}/${FILE}
    fi
    chmod oug+x ${REPO_DIR}/${FILE} 
    rm sed.script
done


FORKURL=${FORKURL-https://github.com/RackHD/on-core.git}
echo "Update the package.json, to reflect the dependency to target commit : ${FORKURL} : ${COMMIT}"
if [ "${FORKURL}" != "https://github.com/RackHD/on-core.git" ]; then
  if [ -e "../build/package.json" ]; then
    sed -i "s|"git+https://github.com/RackHD/on-core.git"|"git+${FORKURL}"|" ${REPO_DIR}/package.json
  fi
fi

if [ ! -z "${COMMIT}" ]; then
  if [ -e "../build/package.json" ]; then
    sed -i "s|"git+${FORKURL}"|"git+${FORKURL}#${COMMIT}"|" ${REPO_DIR}/package.json
  fi
fi

